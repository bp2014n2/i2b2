<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:crc="http://www.i2b2.org/xsd/cell/crc/psm/"
    targetNamespace="http://www.i2b2.org/xsd/cell/crc/psm/">

    <xs:include schemaLocation="./CRC_PSM_OBJ.xsd"/>

    <xs:annotation>
        <xs:documentation>This schema defines abstract responseType and concrete responseTypes. It
            also defines a response element of type responseType. the specific responseType of
            response must be declared in the instance document using the xsi:type
        attribute.</xs:documentation>
    </xs:annotation>

    
    <xs:element name="response" type="crc:responseType"/>
    
    
    <xs:complexType name="responseType" abstract="true">
        <xs:annotation>
            <xs:documentation>responseType is abstract so a concrete type must be declared in the
                instance document using the xsi:type attribute.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="status" type="crc:statusType"/>
        </xs:sequence>
    </xs:complexType>
    
    
    <xs:complexType name="statusType">
        <xs:sequence>
            <xs:element name="condition" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="type" use="required">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="ERROR"/>
                                        <xs:enumeration value="FATAL_ERROR"/>
                                        <xs:enumeration value="WARNING"/>
                                        <xs:enumeration value="INFO"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="coding_system" type="xs:string" use="required"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="patient_set_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="patient_set" type="crc:patient_setType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="request_xml_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:choice>
                    <!-- ANY will allow us to put raw xml instead of inside an
                    <xml_string><![CDATA[  ]]></xml_string>
                    but for now, we won't support the raw xml.
                    ___________________________________________________________
                    <xs:sequence minOccurs="0" maxOccurs="0">
                        <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##any" processContents="skip"/>
                    </xs:sequence>
                    -->
                    <xs:element name="xml_string" type="xs:string"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="master_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="query_master" type="crc:query_masterType"
                        maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="instance_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="query_instance" type="crc:query_instanceType"
                        maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="result_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="query_result_instance" type="crc:query_result_instanceType"
                        maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="instance_result_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="query_instance" type="crc:query_instanceType"/>
                    <xs:element name="query_result_instance" type="crc:query_result_instanceType"
                        minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="master_instance_result_responseType">
        <xs:complexContent>
            <xs:extension base="crc:responseType">
                <xs:sequence>
                    <xs:element name="query_master" type="crc:query_masterType"/>
                    <xs:element name="query_instance" type="crc:query_instanceType" minOccurs="0"/>
                    <xs:element name="query_result_instance" type="crc:query_result_instanceType"
                        minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>
